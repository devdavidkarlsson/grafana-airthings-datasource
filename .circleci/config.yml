aliases:
  # Workflow filters
  - &filter-not-release-or-master
    tags:
      ignore: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    branches:
      ignore:
        - master
        - /^release-[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
  - &filter-only-master
    branches:
      only: master
  - &filter-only-release
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/

defaults: &defaults
  working_directory: ~/grafana-airthings-datasource
  docker:
    - image: circleci/node:12

version: 2
jobs:
  build-frontend:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist/*

  build-backend:
    working_directory: ~/grafana-airthings-datasource
    docker:
      - image: circleci/golang:1.13.7
    environment:
      GOPATH: /go
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - go-vendor-cache-{{ checksum "go.sum" }}
      - run:
          name: install backend
          command: 'make install-backend'
          no_output_timeout: 5m
      - save_cache:
          key: go-vendor-cache-{{ checksum "go.sum" }}
          paths:
          - ./vendor
      - run: make dist-backend
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
      - run: ls -lh dist/

  lint-frontend:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: yarn lint

  lint-backend:
    working_directory: ~/grafana-airthings-datasource
    docker:
    - image: circleci/golang:1.13.7
    environment:
      GOPATH: /go
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-vendor-cache-{{ checksum "go.sum" }}
      - run:
          name: install backend
          command: 'make install-backend'
          no_output_timeout: 5m
      - save_cache:
          key: go-vendor-cache-{{ checksum "go.sum" }}
          paths:
          - ./vendor
      - run: make lint-backend

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run:
          name: Test
          command: yarn test
      - store_artifacts:
          path: coverage

  make-release-branch:
    <<: *defaults
    environment:
      CI_GIT_USER: CircleCI
      CI_GIT_EMAIL: dev.david.karlsson@gmail.com
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a3:4b:d0:4c:82:e7:97:8e:51:cf:b6:35:ee:db:47:19"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Create release branch
          command: ./.circleci/make-release.sh

  codespell:
    docker:
    - image: circleci/python

    steps:
    - checkout
    - run: sudo pip install codespell
    - run: codespell -S './.git*,./src/img*,./docs/img*' -L que --ignore-words=./.codespell_ignore

workflows:
  version: 2
  build-master:
    jobs:
      - build-frontend:
          filters: *filter-only-master
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-only-master
      - codespell:
          filters: *filter-only-master
      - lint-frontend:
          filters: *filter-only-master
      - lint-backend:
          filters: *filter-only-master
      - test:
          filters: *filter-only-master

  build-branches-and-prs:
    jobs:
      - build-frontend:
          filters: *filter-not-release-or-master
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-not-release-or-master
      - codespell:
          filters: *filter-not-release-or-master
      - lint-frontend:
          filters: *filter-not-release-or-master
      - lint-backend:
          filters: *filter-not-release-or-master
      - test:
          filters: *filter-not-release-or-master

  build-release:
    jobs:
      - build-frontend:
          filters: *filter-only-release
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-only-release
      - codespell:
          filters: *filter-only-release
      - lint-frontend:
          filters: *filter-only-release
      - lint-backend:
          filters: *filter-only-release
      - test:
          filters: *filter-only-release
      - make-release-branch:
          requires:
            - build-frontend
            - build-backend
            - codespell
            - lint-frontend
            - lint-backend
            - test
          filters: *filter-only-release
